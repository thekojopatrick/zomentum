{"version":3,"sources":["script.js"],"names":["navMenu","document","querySelector","navToggle","showMenu","classList","remove","add","hideMenu","addEventListener","contains","navLink","querySelectorAll","linkAction","scrollHeader","header","this","scrollY","forEach","link","window","prevRatio","createObserver","target","IntersectionObserver","handleIntersect","root","rootMargin","threshold","observe","entries","observer","entry","intersectionRatio","aboutSection","getElementById","features","footerElement","f"],"mappings":"AAAA,aACA,IAAMA,QAAUC,SAASC,cAAc,cACtCC,UAAYF,SAASC,cAAc,yBAUpC,SAASE,WAERD,UAAUE,UAAUC,OAAO,gBAC3BH,UAAUE,UAAUE,IAAI,iBACxBP,QAAQK,UAAUE,IAAI,aAGvB,SAASC,WAERL,UAAUE,UAAUE,IAAI,gBACxBJ,UAAUE,UAAUC,OAAO,iBAC3BN,QAAQK,UAAUC,OAAO,aAjBtBH,WACHA,UAAUM,iBAAiB,SAAS,WACnCN,UAAUE,UAAUK,SAAS,gBAAkBN,WAAaI,cAmB9D,IAAMG,QAAUV,SAASW,iBAAiB,cAE1C,SAASC,aAERL,WAKD,SAASM,eACR,IAAMC,EAASd,SAASC,cAAc,WAElCc,KAAKC,SAAW,GAAIF,EAAOV,UAAUE,IAAI,iBACxCQ,EAAOV,UAAUC,OAAO,iBAP9BK,QAAQO,SAAQ,SAACC,GAAD,OAAUA,EAAKV,iBAAiB,QAASI,eASzDO,OAAOX,iBAAiB,SAAUK,cAGlC,IAAIO,UAAY,EAgBhB,SAASC,eAAeC,GAMR,IAAIC,qBAAqBC,gBAL1B,CACbC,KAAM,KACNC,WAAY,MACZC,UAAW,CAAC,EAAG,GAAK,KAGZC,QAAQN,GAGlB,SAASE,gBAAgBK,EAASC,GACjCD,EAAQZ,SAAQ,SAACc,GACZA,EAAMC,kBAAoBZ,WAC7BW,EAAMT,OAAOlB,UAAUE,IAAI,WAE5Bc,UAAYW,EAAMC,qBA9BpBb,OAAOX,iBACN,QACA,WACC,IAAIyB,EAAejC,SAASkC,eAAe,iBACvCC,EAAWnC,SAASW,iBAAiB,WACrCyB,EAAgBpC,SAASkC,eAAe,UAC5Cb,eAAeY,GACfE,EAASlB,SAAQ,SAACoB,GACjBhB,eAAegB,MAEhBhB,eAAee,MAEhB","file":"script.js","sourcesContent":["/*============== SHOW MENU ============ */\r\nconst navMenu = document.querySelector(\".nav__list\"),\r\n\tnavToggle = document.querySelector(\".nav__hamburger--open\");\r\n\r\n/* ========= MENU SHOW/HIDE ======== */\r\n/* Validate if constant exists */\r\nif (navToggle) {\r\n\tnavToggle.addEventListener(\"click\", () => {\r\n\t\tnavToggle.classList.contains(\"ri-menu-line\") ? showMenu() : hideMenu();\r\n\t});\r\n}\r\n\r\nfunction showMenu() {\r\n\t// When we click on .nav__hamburger, we remove .ri-menu-line icon and add .ri-close-line icon, show-menu class to .navMenu\r\n\tnavToggle.classList.remove(\"ri-menu-line\");\r\n\tnavToggle.classList.add(\"ri-close-line\");\r\n\tnavMenu.classList.add(\"show-menu\");\r\n}\r\n\r\nfunction hideMenu() {\r\n\t// onclick .nav__hamburger, we add .ri-menu-line icon and remove the show-menu class\r\n\tnavToggle.classList.add(\"ri-menu-line\");\r\n\tnavToggle.classList.remove(\"ri-close-line\");\r\n\tnavMenu.classList.remove(\"show-menu\");\r\n}\r\n\r\n/*============ REMOVE MENU MOBILE ============*/\r\nconst navLink = document.querySelectorAll(\".nav__link\");\r\n\r\nfunction linkAction() {\r\n\t// When we click on each nav__link, we remove the show-menu class\r\n\thideMenu();\r\n}\r\nnavLink.forEach((link) => link.addEventListener(\"click\", linkAction));\r\n\r\n/*============ CHANGE HEADER POSITION =========*/\r\nfunction scrollHeader() {\r\n\tconst header = document.querySelector(\".header\");\r\n\t// When the scroll is greater than 80px viewport height, add the scroll-header class to the header tag\r\n\tif (this.scrollY >= 80) header.classList.add(\"scroll-header\");\r\n\telse header.classList.remove(\"scroll-header\");\r\n}\r\nwindow.addEventListener(\"scroll\", scrollHeader);\r\n\r\n/*============= SCROLL REVEAL ANIMATION ==============*/\r\nlet prevRatio = 0.0;\r\nwindow.addEventListener(\r\n\t\"load\",\r\n\t() => {\r\n\t\tlet aboutSection = document.getElementById(\"section-about\");\r\n\t\tlet features = document.querySelectorAll(\"article\");\r\n\t\tlet footerElement = document.getElementById(\"footer\");\r\n\t\tcreateObserver(aboutSection);\r\n\t\tfeatures.forEach((f) => {\r\n\t\t\tcreateObserver(f);\r\n\t\t});\r\n\t\tcreateObserver(footerElement);\r\n\t},\r\n\tfalse\r\n);\r\n\r\nfunction createObserver(target) {\r\n\tlet options = {\r\n\t\troot: null, //null means use default device viewport as root element\r\n\t\trootMargin: \"0px\",\r\n\t\tthreshold: [0, 0.5, 1.0], //threshold of 1.0 means that when 100% of the target is visible within the element specified by the root option\r\n\t};\r\n\tlet observer = new IntersectionObserver(handleIntersect, options);\r\n\tobserver.observe(target);\r\n}\r\n\r\nfunction handleIntersect(entries, observer) {\r\n\tentries.forEach((entry) => {\r\n\t\tif (entry.intersectionRatio > prevRatio) {\r\n\t\t\tentry.target.classList.add(\"animate\");\r\n\t\t}\r\n\t\tprevRatio = entry.intersectionRatio;\r\n\t});\r\n}\r\n"]}